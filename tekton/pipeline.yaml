#
# This pipeline needs the following tasks from Tekton Hub
#   - git-clone
#   - flake8
#
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:  
  name: cd-pipeline
spec:
  workspaces:
    - name: pipeline-workspace
  params:
    - name: repo-url
    - name: branch
      default: main
    - name: build-image

  tasks:

    - name: init
      workspaces:
        - name: source
          workspace: pipeline-workspace          
      taskRef:
        name: cleanup

    - name: clone
      workspaces:
        - name: output
          workspace: pipeline-workspace          
      taskRef:
        name: git-clone
      params:
      - name: url
        value: $(params.repo-url)
      - name: revision
        value: $(params.branch)
      runAfter:
        - init

    - name: lint
      # TASK - lint
      #  This task provides linting for Python.
      #  From Tekton Hub / flake8
      #   Workspaces
      #   - source: A Workspace volume containing the python code
      #   Parameters
      #   - args: The arguments to be passed to the flake8 CLI. (Default: [""])
      #   - path: The path to the module which should be analysed by flake8. (Default: ".")
      #   - requirements_file: The path to the requirements file to pip install for your application to be checked. (Default: "requirements.txt")
      workspaces:
        - name: source
          workspace: pipeline-workspace          
      taskRef:
        name: flake8
      params:
      - name: image
        value: "python:3.9-slim"
      - name: args
        value: ["--count","--max-complexity=10","--max-line-length=127","--statistics"]
      runAfter:
        - clone

    - name: tests
      # TASK - tests
      #  This task runs nosetests for Python.
      #  From Tekton Hub / flake8
      #   Workspaces
      #   - source: A Workspace volume containing the python code
      #   Parameters
      #   - args: The arguments to be passed to the flake8 CLI. (Default: [""])
      #   - path: The path to the module which should be analysed by flake8. (Default: ".")
      #   - requirements_file: The path to the requirements file to pip install for your application to be checked. (Default: "requirements.txt")
      workspaces:
        - name: source
          workspace: pipeline-workspace          
      taskRef:
        name: nose
      params:
      - name: database_uri
        value: "sqlite:///test.db"
      - name: args
        value: "-v --with-spec --spec-color"
      runAfter:
        - clone

    - name: build
      # TASK - build
      # This Task builds source into a container image using Project
      #  Atomic's Buildah build tool. It uses Buildah's support for 
      #  building from Dockerfiles, using its buildah bud command. 
      #  This command executes the directives in the Dockerfile to 
      #  assemble a container image, then pushes that image to a 
      #  container registry.
      # From Tekton Hub / buildah
      #   Workspaces
      #   - source: A Workspace containing the source to build.
      # Parameters
      #   - IMAGE: The name (reference) of the image to build.
      workspaces:
        - name: source
          workspace: pipeline-workspace          
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
      - name: IMAGE
        value: "$(params.build-image)"
      runAfter:
        - tests
        - lint

